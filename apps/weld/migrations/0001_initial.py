# Generated by Django 2.2.3 on 2020-07-14 20:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Base',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Установка, например, БНТК-2 ТХ-18')),
            ],
            options={
                'verbose_name': 'Установка',
                'verbose_name_plural': 'Установки',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='Joint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Стык',
                'verbose_name_plural': 'Стыки',
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Линия',
                'verbose_name_plural': 'Линии',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Материал (сталь)',
                'verbose_name_plural': 'Материалы (сталь)',
            },
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Схема',
                'verbose_name_plural': 'Схемы',
            },
        ),
        migrations.CreateModel(
            name='Titul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Титул',
                'verbose_name_plural': 'Титулы',
            },
        ),
        migrations.CreateModel(
            name='Welder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('stigma', models.CharField(blank=True, max_length=255, null=True, verbose_name='Клеймо, например, 9SZN')),
            ],
            options={
                'verbose_name': 'Сварщик',
                'verbose_name_plural': 'Сварщики',
            },
        ),
        migrations.CreateModel(
            name='WeldingJoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.IntegerField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('state', models.IntegerField(blank=True, db_index=True, null=True)),
                ('parents', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('repair', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Ремонт, например, 2 (второй ремонт)')),
                ('cutout', models.BooleanField(blank=True, db_index=True, null=True, verbose_name='Вырез')),
                ('diameter', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=9, null=True, verbose_name='Диаметр в мм, например, 355.6')),
                ('side_thickness', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=9, null=True, verbose_name='Толщина стенки, например, 4,78')),
                ('join_type', models.IntegerField(blank=True, choices=[(1, 'трубы/отвод')], null=True, verbose_name='Свариваемые элементы, например, тройник/переходник')),
                ('welding_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Дата сварки, например, 12.03.2020')),
                ('workshift', models.IntegerField(blank=True, choices=[(1, 1)], db_index=True, null=True, verbose_name='Номер, смены, например, 1')),
                ('request_number', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Номер заявки на НК, например, ТПС-БНТК-1 ТХ-18-875-РК-23')),
                ('request_control_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Дата заявки на НК, например, 3/12/20')),
                ('control_type', models.IntegerField(blank=True, choices=[(1, 'РК')], db_index=True, null=True, verbose_name='Вид контроля, например, РК')),
                ('welding_conn_view', models.IntegerField(blank=True, choices=[(1, 'С17')], db_index=True, null=True, verbose_name='Вид сварного соединения, например, C17')),
                ('welding_type', models.IntegerField(blank=True, choices=[(1, 'РАД')], db_index=True, null=True, verbose_name='Тип сварки, например, РД')),
                ('category', models.IntegerField(blank=True, choices=[(1, 'I')], db_index=True, null=True, verbose_name='Категория, например I')),
                ('control_result', models.IntegerField(blank=True, choices=[(1, 'Вырезать')], db_index=True, null=True, verbose_name='Результат контроля, например, Вырезать')),
                ('conclusion_number', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Номер заключения, например, ТПС-БНТК-1 ТХ-18-875-РК-23')),
                ('conclusion_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Дата заключения, например, 3/29/20')),
                ('notice', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Примечание, например, только Вик')),
                ('dinc', models.DecimalField(blank=True, db_index=True, decimal_places=15, max_digits=17, null=True, verbose_name='D-inc на человека или стык, например, 10,748031496063')),
                ('base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Base', verbose_name='Установка, где размещен стык, например, БНТК-2 ТХ-18')),
                ('joint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Joint', verbose_name='Номер стыка, например, 26А')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Line', verbose_name='Номер линии, например, 913A')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Material', verbose_name='Материал - сталь, например, 12Х18Н10Т')),
                ('on_balance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Company', verbose_name='На чьем балансе, например, ЛНК')),
                ('scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Scheme', verbose_name='Номер изом. схемы, например, 229-ВО-304SS-6" 2,5" C')),
                ('titul', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='weld.Titul', verbose_name='Титул, например, У101')),
            ],
            options={
                'verbose_name': 'Сварочное соединение',
                'verbose_name_plural': 'Сварочные соединения',
            },
        ),
        migrations.CreateModel(
            name='JointWelder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('welder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weld.Welder', verbose_name='Сварщик')),
                ('welding_joint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='weld.WeldingJoint', verbose_name='Сварочное соединение')),
            ],
            options={
                'verbose_name': 'Сварщик стыка',
                'verbose_name_plural': 'Сварщики стыков',
            },
        ),
    ]
