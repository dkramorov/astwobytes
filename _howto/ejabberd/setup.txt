https://docs.ejabberd.im/admin/installation/
ejabberdctl status
ejabberdctl register jocker chat.masterme.ru password
User jocker@chat.masterme.ru successfully registered

https://docs.ejabberd.im/admin/configuration/basic/

./autogen.sh
./configure --enable-user=ejabberd --enable-stun --enable-sip --enable-debug --enable-mysql --enable-zlib
make


Create ejabberd user and database

MySQL admins should use that schema and grant right to a dedicated 'ejabberd' user (replace password with your desired password):

echo "GRANT ALL ON ejabberd.* TO 'ejabberd'@'localhost' IDENTIFIED BY 'password';" | mysql -h localhost -u root
Select Code

You can then create a dedicated 'ejabberd' database (use password created earlier):

echo "CREATE DATABASE ejabberd;" | mysql -h localhost -u ejabberd -p



mysql -h localhost -D ejabberd -u ejabberd -p < mysql.sql



In ejabberd.yml, define your database parameters:
sql_type: mysql
sql_server: "localhost"
sql_database: "ejabberd"
sql_username: "ejabberd"
sql_password: "password"
## If you want to specify the port:
sql_port: 3306


# reg user
ejabberdctl register admin1 example.org password



api_permissions:
  "http_api commands":
    who:
      - ip: "127.0.0.1"
    from:
      - mod_http_api
    what:
      - "register"


для чтения сертификаторв
chgrp -R ejabberd /etc/letsencrypt
chmod -R +r /etc/letsencrypt

https://www.process-one.net/blog/ejabberd-19-09/

ejabberdctl request_certificate all
ejabberdctl request_certificate chat.masterme.ru

ejabberdctl list-certificates

    listen 80;
    listen [::]:80;

    server_name chat.masterme.ru *.chat.masterme.ru;
    root /home/jocker/sites/8800;

    if ($http_user_agent ~* WordPress|BBBike|wget) {
      return 403;
    }

  location ~ /.well-known {
    #root /home/jocker/sites/8800/media;
    try_files $uri @ejabberd;
    allow all;
  }
  location @ejabberd {
    proxy_http_version 1.1;
    proxy_pass http://127.0.0.1:5280;
    proxy_buffering off;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }

root@new:/var/log/ejabberd# ejabberdctl list-certificates
chat.masterme.ru	/var/lib/ejabberd/acme/live/8a50475ebf0fc4f07267191d2935202243878c84	true
ls -l /var/lib/ejabberd/acme

MYSQL ---
https://docs.ejabberd.im/tutorials/mysql/
wget https://raw.githubusercontent.com/processone/ejabberd/master/sql/mysql.sql
mysql -h localhost -D ejabberd -u ejabberd -p < mysql.sql

Решение проблемы:
apt install erlang-p1-mysql

2022-06-05 16:28:58.011 [critical] <0.674.0>@ejabberd:exit_or_halt:146 Failed to start Erlang application 'p1_mysql': no such file or directory: p1_mysql.app. This usually means that ejabberd or Erlang was compiled/installed incorrectly.
2022-06-05 16:28:58.012 [error] <0.674.0>@ejabberd_hooks:safe_apply:240 Hook user_receive_packet crashed when running mod_mam:user_receive_packet/1:
** exception error: application_start_failed
   in function  ejabberd:exit_or_halt/2 (ejabberd.erl, line 151)
   in call from ejabberd_sql_sup:start/1 (ejabberd_sql_sup.erl, line 46)
   in call from ejabberd_sql:sync_send_event/3 (ejabberd_sql.erl, line 165)
   in call from mod_mam_sql:get_prefs/2 (mod_mam_sql.erl, line 159)
   in call from ets_cache:lookup/3 (ets_cache.erl, line 166)
   in call from mod_mam:get_prefs/2 (mod_mam.erl, line 965)
   in call from mod_mam:store_msg/5 (mod_mam.erl, line 895)
   in call from mod_mam:user_receive_packet/1 (mod_mam.erl, line 367)




binary /var/lib/ejabberd/ejabberd.backup
plain /var/lib/ejabberd/ejabberd.dump
export users data /var/lib/ejabberd
export all tables /var/lib/ejabberd/db.sql


#!/bin/bash
ejabberdctl set_vcard user27 jabber.domain.local FN "27 Пользователь"
ejabberdctl set_vcard user27 jabber.domain.local NICKNAME "27 Пользователь"
ejabberdctl set_vcard 89148959223 chat.masterme.ru NICKNAME "Денис Краморов"


# MUC
https://docs.ejabberd.im/admin/ejabberdctl/muc-admin/

root@new:/opt/ejabberd/logs# ejabberdctl muc_online_rooms global
123@conference.chat.masterme.ru
321@conference.chat.masterme.ru

root@new:/opt/ejabberd/logs# ejabberdctl muc_online_rooms conference.chat.masterme.ru
123@conference.chat.masterme.ru
321@conference.chat.masterme.ru

List rooms joined by a given user
Get the list of rooms where a user is occupant.
ejabberdctl get_user_rooms 89016598623 chat.masterme.ru
321@conference.chat.masterme.ru
ejabberdctl get_user_rooms 89148959223 chat.masterme.ru
111@conference.chat.masterme.ru

Retrieve number of occupants in a MUC room
Get the number of occupants of a MUC room.
ejabberdctl get_room_occupants_number 321 conference.chat.masterme.ru
0
ejabberdctl get_room_occupants_number 111 conference.chat.masterme.ru
1

List the occupants of a MUC room
Get the list of occupants of a MUC room.
ejabberdctl get_room_occupants 111 conference.chat.masterme.ru

Affiliation
    A long-lived association or connection with a room; the possible affiliations are "owner", "admin", "member", and "outcast" (naturally it is also possible to have no affiliation); affiliation is distinct from role. An affiliation lasts across a user's visits to a room.

Get affiliations for a MUC room
Get the list of affiliations of a MUC room.
ejabberdctl get_room_affiliations 321 conference.chat.masterme.ru
89016598623	chat.masterme.ru	owner
ejabberdctl get_room_affiliations 111 conference.chat.masterme.ru
89016598623	chat.masterme.ru	owner	

Change affiliation for a user in a MUC room
Change an affiliation in a MUC room. Affiliation can be one of: owner, admin, member, outcast, none.
ejabberdctl set_room_affiliation 111 conference.chat.masterme.ru 89148959223 member
