sudo iptables-save > /etc/iptables_rules
It doesn't really matter where you put the file, all you have to do is make sure that the next line refers to the same file. Next, open /etc/rc.local and add this line:
/sbin/iptables-restore < /etc/iptables_rules


/etc/network/interfaces
iface eth0 inet static
        address 188.166.17.32
        netmask 255.255.192.0
        gateway 188.166.0.1

        pre-up iptables-restore < /home/jocker/iptables
        post-down iptables-restore < /home/jocker/iptables

iptables -I INPUT 1 -i ppp+ -p tcp -m tcp --dport 3306 -j DROP
iptables -I INPUT 1 -i ppp+ -p tcp --dport 8021 -j DROP

sysctl -a|grep rp_filter

Блокировка определенного IP адреса.

Чтобы заблокировать адрес взломщика 1.2.3.4:
# iptables -A INPUT -s 1.2.3.4 -j DROP
# iptables -A INPUT -s 192.168.0.0/24 -j DROP
13. Заблокировать входящие запросы порта.

Чтобы заблокировать все входящие запросы порта 80:
# iptables -A INPUT -p tcp --dport 80 -j DROP
# iptables -A INPUT -i eth1 -p tcp --dport 80 -j DROP

Чтобы заблокировать запрос порта 80 с адреса 1.2.3.4:
# iptables -A INPUT -p tcp -s 1.2.3.4 --dport 80 -j DROP
# iptables -A INPUT -i eth1 -p tcp -s 192.168.1.0/24 --dport 80 -j DROP

Чтобы заблокировать подсеть
# iptables -I INPUT -s 77.247.110.0/24 -j DROP


# cat /proc/sys/net/ipv4/ip_forward
Для начала нам нужно включить форвардинг:
echo 1 > /proc/sys/net/ipv4/ip_forward

Для автоматического включения открываем файл /etc/sysctl.conf и ищем там строку и убираем знак комментария:
# net.ipv4.ip_forward=1
у нас получается:
net.ipv4.ip_forward=1


Предположим, что eth0 подключен к провайдеру и имеет IP-адрес в его подсети, допустим 199.199.199.2.
eth1 подключен к компьютеру в локальной сети, которому нужно обеспечить доступ в Интернет через NAT.
eth1 имеет адрес 10.10.10.1.
IP-адрес компьютера, которому необходимо обеспечить доступ - 10.10.10.2

Даем доступ интерфейсу eth1 с IP-адреса 10.10.10.2:
iptables -t nat -A POSTROUTING -s 10.10.10.2 -o eth1 -j MASQUERADE

или всей подсети:
iptables -t nat -A POSTROUTING -s 10.10.10.0/24 -o eth1 -j MASQUERADE




Например, у нас имеется ftp сервер внутри сети — 10.10.10.2 порт 21,и нам нужно разрешить пользователям подключаться к нему из Интеренета.
Внешний адрес — 199.199.199.2, адрес ftp — 10.10.10.2, порт — 21.

iptables -t nat -A PREROUTING --dst 199.199.199.2 -p tcp --dport 21 -j DNAT --to-destination 10.10.10.2
iptables -I FORWARD -i eth0 -o eth1 -d 10.10.10.2 -p tcp -m tcp --dport 21 -j ACCEPT

Первое правило добавляется в табицу трасляции (-t nat), оно перенапрявляет пакеты, посланные на порт 21, с адреса 199.199.199.2 на 10.10.10.2.
Второе правило разрешает пакетам проходить по данному маршруту.





root@new:/etc/network/if-up.d# cat iptables
#!/bin/bash

if [[ $IFACE == "eth0" ]]; then
  /usr/sbin/iptables-restore < /home/jocker/iptables
fi


iptables -t nat -D POSTROUTING 1

iptables -t nat -A POSTROUTING -s 10.2.2.0/24 -o eth0 -j MASQUERADE

root@new:/etc/network/if-up.d# IFACE=eth0 ./iptables










